{"version":3,"sources":["webpack:///./src/Header.jsx","webpack:///./src/MetroLineFeed.jsx","webpack:///./src/index.jsx","webpack:///./src/MetroLineViewer.jsx","webpack:///./src/MetroLineFilter.jsx","webpack:///./src/App.jsx"],"names":["Header","props","React","Component","MetroLineFeed","$","append","attr","ReactDOM","render","document","getElementById","MetroLineViewer","filterQuery","setState","onSubmit","this","handleSubmit","state","metroLines","require","MetroSelector","options","map","metro","metroIndex","key","toString","value","onChange","e","LineSelector","parseInt","line","lineIndex","MetroLineFilter","type","target","alert","preventDefault","handleChange","App"],"mappings":"q5BAAMA,E,YAEF,WAAYC,GAAO,O,4FAAA,+BACTA,I,gSAIN,OACI,2BACI,uDACA,4H,8BAVKC,EAAMC,WAiBZH,Q,k3BCjBTI,E,YAEF,WAAYH,GAAO,O,4FAAA,+BACTA,I,gSAIN,OACI,0D,8BARgBC,EAAMC,WAcnBC,Q,0DCdf,uCAEAC,GAAE,WACEA,EAAE,QAAQC,OAAOD,EAAE,eAAeE,KAAK,KAAM,SAE7CC,EAASC,OACL,gBAAC,IAAD,MACAC,SAASC,eAAe,a,s9BCJ1BC,E,YAEF,WAAYX,GAAO,M,IAAA,O,4FAAA,S,EACf,K,EAAA,eAAMA,GAAN,G,gDADe,eAIX,CACJY,YAAa,OALE,uBAQJ,SAACA,GACZ,EAAKC,SAAS,CACVD,YAAaA,OAVF,E,gSAef,OACI,2BACI,gBAAC,IAAD,CAAiBE,SAAUC,KAAKC,eAChC,gBAAC,IAAD,CAAeJ,YAAaG,KAAKE,MAAML,oB,8BApBzBX,EAAMC,WA2BrBS,Q,k2CC9Bf,IAAMO,EAAaC,EAAQ,QAErBC,E,YAEF,WAAYpB,GAAO,uCACTA,I,kDAGD,WAGCqB,EAFSH,EAAU,OAEFI,KAAI,SAACC,EAAOC,GAAR,OACvB,0BAAQC,IAAKD,EAAWE,WAAYC,MAAOH,EAAWE,YAAtD,UAAsEH,EAAK,KAA3E,aAAwFA,EAAK,KAA7F,SAGJ,OACI,0BAAQI,MAAOZ,KAAKf,MAAM2B,MAAOC,SAAU,SAACC,GAAD,OAAO,EAAK7B,MAAM4B,SAASC,EAAG,WAAWR,O,GAdpEpB,EAAMC,WAoB5B4B,E,YAEF,WAAY9B,GAAO,uCACTA,I,kDAGD,WAICqB,EAHQH,EAAU,OAAWa,SAAShB,KAAKf,MAAMuB,QACpC,MAEGD,KAAI,SAACU,EAAMC,GAAP,OACtB,0BAAQR,IAAKQ,EAAUP,WAAYC,MAAOM,EAAUP,YAAaM,EAAI,SAGzE,OACI,0BAAQL,MAAOZ,KAAKf,MAAM2B,MAAOC,SAAU,SAACC,GAAD,OAAO,EAAK7B,MAAM4B,SAASC,EAAG,UAAUR,O,GAfpEpB,EAAMC,WAqB3BgC,E,YAEF,WAAYlC,GAAO,2BACf,wBAAMA,KADS,QAIX,CACJuB,MAAO,IACPS,KAAM,MANS,uBASJ,SAACH,EAAGM,GACf,EAAKtB,SAAL,KACKsB,EAAON,EAAEO,OAAOT,QAET,SAARQ,GACA,EAAKtB,SAAS,CACVmB,KAAM,SAfC,uBAoBJ,SAACH,GACZQ,MAAM,sBAAD,OAAuB,EAAKpB,MAAMM,MAAlC,qBAAoD,EAAKN,MAAMe,KAA/D,MACLH,EAAES,oBAtBa,E,kDA0Bf,OACI,wBAAMxB,SAAUC,KAAKC,cACjB,gBAACI,EAAD,CAAeO,MAAOZ,KAAKE,MAAMM,MAAOK,SAAUb,KAAKwB,eACvD,gBAACT,EAAD,CAAcP,MAAOR,KAAKE,MAAMM,MAAOI,MAAOZ,KAAKE,MAAMe,KAAMJ,SAAUb,KAAKwB,eAC9E,yBAAOJ,KAAK,SAASR,MAAM,iB,GAhCb1B,EAAMC,WAuCrBgC,Q,44BC/ETM,E,YAEF,WAAYxC,GAAO,O,4FAAA,+BACTA,I,gSAIN,OACI,2BACI,gBAAC,IAAD,MACA,gBAAC,IAAD,Y,8BAVEC,EAAMC,WAiBTsC,Q","file":"app.17b3a5442ad6a4c4251c.js","sourcesContent":["class Header extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Welcome to Metro Updates!</h1>\r\n                <p>Stay updated on your commute by viewing recent alerts regarding your favorite metro line!</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","class MetroLineFeed extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p>The feed should be here.</p>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MetroLineFeed;","import App from './App';\r\n\r\n$(() => {\r\n    $('body').append($('<div></div>').attr('id', 'root'));\r\n\r\n    ReactDOM.render(\r\n        <App/>,\r\n        document.getElementById('root')\r\n    );\r\n});\r\n\r\n","import MetroLineFilter from './MetroLineFilter';\r\nimport MetroLineFeed from './MetroLineFeed';\r\n\r\nclass MetroLineViewer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        filterQuery: null\r\n    };\r\n\r\n    handleSubmit = (filterQuery) => {\r\n        this.setState({\r\n            filterQuery: filterQuery\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MetroLineFilter onSubmit={this.handleSubmit}/>\r\n                <MetroLineFeed filterQuery={this.state.filterQuery}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MetroLineViewer;","const metroLines = require('./metroLines.json');\r\n\r\nclass MetroSelector extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const metros = metroLines['metros'];\r\n\r\n        const options = metros.map((metro, metroIndex) => (\r\n            <option key={metroIndex.toString()} value={metroIndex.toString()}>{`${metro['name']} (${metro['city']})`}</option>\r\n        ));\r\n\r\n        return (\r\n            <select value={this.props.value} onChange={(e) => this.props.onChange(e, 'metro')}>{options}</select>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nclass LineSelector extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const metro = metroLines['metros'][parseInt(this.props.metro)];\r\n        const lines = metro['lines'];\r\n\r\n        const options = lines.map((line, lineIndex) => (\r\n            <option key={lineIndex.toString()} value={lineIndex.toString()}>{line['name']}</option>\r\n        ));\r\n\r\n        return (\r\n            <select value={this.props.value} onChange={(e) => this.props.onChange(e, 'line')}>{options}</select>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nclass MetroLineFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        metro: '0',\r\n        line: '0'\r\n    };\r\n\r\n    handleChange = (e, type) => {\r\n        this.setState({\r\n            [type]: e.target.value\r\n        });\r\n        if (type == 'metro') {\r\n            this.setState({\r\n                line: '0'\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        alert(`Filtering by metro ${this.state.metro} and line ${this.state.line}!`);\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <MetroSelector value={this.state.metro} onChange={this.handleChange}/>\r\n                <LineSelector metro={this.state.metro} value={this.state.line} onChange={this.handleChange}/>\r\n                <input type='submit' value='Filter!' />\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MetroLineFilter;","import Header from './Header';\r\nimport MetroLineViewer from './MetroLineViewer';\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <MetroLineViewer />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;"],"sourceRoot":""}